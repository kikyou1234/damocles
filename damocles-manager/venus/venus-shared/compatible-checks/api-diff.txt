github.com/filecoin-project/venus/venus-shared/api/chain/v0.FullNode <> github.com/filecoin-project/lotus/api/v0api.FullNode:
	- AuthNew
	- AuthVerify
	+ BlockTime
	- ChainGetNode
	+ ChainGetReceipts
	+ ChainList
	+ ChainSyncHandleNewTipSet
	- ClientCalcCommP
	- ClientCancelDataTransfer
	- ClientCancelRetrievalDeal
	- ClientDataTransferUpdates
	- ClientDealPieceCID
	- ClientDealSize
	- ClientFindData
	- ClientGenCar
	- ClientGetDealInfo
	- ClientGetDealStatus
	- ClientGetDealUpdates
	- ClientGetRetrievalUpdates
	- ClientHasLocal
	- ClientImport
	- ClientListDataTransfers
	- ClientListDeals
	- ClientListImports
	- ClientListRetrievals
	- ClientMinerQueryOffer
	- ClientQueryAsk
	- ClientRemoveImport
	- ClientRestartDataTransfer
	- ClientRetrieve
	- ClientRetrieveTryRestartInsufficientFunds
	- ClientRetrieveWithEvents
	- ClientStartDeal
	- ClientStatelessDeal
	- Closing
	+ Concurrent
	- CreateBackup
	- Discover
	+ GasBatchEstimateMessageGas
	> GasEstimateMessageGas {[func(context.Context, *types.Message, *types.MessageSendSpec, types.TipSetKey) (*types.Message, error) <> func(context.Context, *types.Message, *api.MessageSendSpec, types.TipSetKey) (*types.Message, error)] base=func in type: #2 input; nested={[*types.MessageSendSpec <> *api.MessageSendSpec] base=pointed type; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=struct field; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=exported field name: #1 field, GasOverEstimation != MsgUuid; nested=nil}}}}
	+ GetActor
	+ GetEntry
	+ GetFullBlock
	+ GetParentStateRootActor
	+ HasPassword
	+ ListActor
	+ LockWallet
	- LogAlerts
	- LogList
	- LogSetLevel
	- MarketAddBalance
	- MarketGetReserved
	- MarketReleaseFunds
	- MarketReserveFunds
	- MarketWithdraw
	> MpoolBatchPushMessage {[func(context.Context, []*types.Message, *types.MessageSendSpec) ([]*types.SignedMessage, error) <> func(context.Context, []*types.Message, *api.MessageSendSpec) ([]*types.SignedMessage, error)] base=func in type: #2 input; nested={[*types.MessageSendSpec <> *api.MessageSendSpec] base=pointed type; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=struct field; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=exported field name: #1 field, GasOverEstimation != MsgUuid; nested=nil}}}}
	+ MpoolDeleteByAdress
	+ MpoolPublishByAddr
	+ MpoolPublishMessage
	> MpoolPushMessage {[func(context.Context, *types.Message, *types.MessageSendSpec) (*types.SignedMessage, error) <> func(context.Context, *types.Message, *api.MessageSendSpec) (*types.SignedMessage, error)] base=func in type: #2 input; nested={[*types.MessageSendSpec <> *api.MessageSendSpec] base=pointed type; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=struct field; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=exported field name: #1 field, GasOverEstimation != MsgUuid; nested=nil}}}}
	+ MpoolSelects
	- MsigAddApprove
	- MsigAddCancel
	- MsigAddPropose
	- MsigApprove
	- MsigApproveTxnHash
	- MsigCancel
	- MsigCreate
	- MsigGetAvailableBalance
	- MsigGetPending
	- MsigGetVested
	- MsigGetVestingSchedule
	- MsigPropose
	- MsigRemoveSigner
	- MsigSwapApprove
	- MsigSwapCancel
	- MsigSwapPropose
	- NetBlockAdd
	- NetBlockList
	- NetBlockRemove
	+ NetFindProvidersAsync
	+ NetGetClosestPeers
	- NetLimit
	- NetSetLimit
	- NetStat
	+ ProtocolParameters
	+ ResolveToKeyAddr
	- Session
	+ SetConcurrent
	+ SetPassword
	- Shutdown
	- StateGetAllAllocations
	- StateGetAllClaims
	+ StateMinerSectorSize
	+ StateMinerWorkerAddress
	- SyncCheckBad
	- SyncCheckpoint
	- SyncMarkBad
	- SyncUnmarkAllBad
	- SyncUnmarkBad
	- SyncValidateTipset
	+ SyncerTracker
	+ UnLockWallet
	+ VerifyEntry
	> Version {[func(context.Context) (types.Version, error) <> func(context.Context) (api.APIVersion, error)] base=func out type: #0 input; nested={[types.Version <> api.APIVersion] base=struct field; nested={[types.Version <> api.APIVersion] base=exported fields count: 2 != 3; nested=nil}}}
	+ WalletAddresses
	> WalletExport {[func(context.Context, address.Address, string) (*types.KeyInfo, error) <> func(context.Context, address.Address) (*types.KeyInfo, error)] base=func in num: 3 != 2; nested=nil}
	- WalletList
	- WalletNew
	+ WalletNewAddress
	> WalletSign {[func(context.Context, address.Address, []uint8, types.MsgMeta) (*crypto.Signature, error) <> func(context.Context, address.Address, []uint8) (*crypto.Signature, error)] base=func in num: 4 != 3; nested=nil}
	+ WalletState
	- WalletValidateAddress
	- WalletVerify

github.com/filecoin-project/venus/venus-shared/api/chain/v1.FullNode <> github.com/filecoin-project/lotus/api.FullNode:
	- AuthNew
	- AuthVerify
	+ BlockTime
	- ChainBlockstoreInfo
	- ChainCheckBlockstore
	- ChainExportRangeInternal
	- ChainGetNode
	+ ChainGetReceipts
	- ChainHotGC
	+ ChainList
	- ChainPrune
	+ ChainSyncHandleNewTipSet
	- ClientCalcCommP
	- ClientCancelDataTransfer
	- ClientCancelRetrievalDeal
	- ClientDataTransferUpdates
	- ClientDealPieceCID
	- ClientDealSize
	- ClientExport
	- ClientFindData
	- ClientGenCar
	- ClientGetDealInfo
	- ClientGetDealStatus
	- ClientGetDealUpdates
	- ClientGetRetrievalUpdates
	- ClientHasLocal
	- ClientImport
	- ClientListDataTransfers
	- ClientListDeals
	- ClientListImports
	- ClientListRetrievals
	- ClientMinerQueryOffer
	- ClientQueryAsk
	- ClientRemoveImport
	- ClientRestartDataTransfer
	- ClientRetrieve
	- ClientRetrieveTryRestartInsufficientFunds
	- ClientRetrieveWait
	- ClientStartDeal
	- ClientStatelessDeal
	- Closing
	+ Concurrent
	- CreateBackup
	- Discover
	> EthTraceBlock {[func(context.Context, string) ([]*types.EthTraceBlock, error) <> func(context.Context, string) ([]*ethtypes.EthTraceBlock, error)] base=func out type: #0 input; nested={[[]*types.EthTraceBlock <> []*ethtypes.EthTraceBlock] base=slice element; nested={[*types.EthTraceBlock <> *ethtypes.EthTraceBlock] base=pointed type; nested={[types.EthTraceBlock <> ethtypes.EthTraceBlock] base=struct field; nested={[types.EthTraceBlock <> ethtypes.EthTraceBlock] base=exported field type: #0 field named EthTrace; nested={[*types.EthTrace <> *ethtypes.EthTrace] base=pointed type; nested={[types.EthTrace <> ethtypes.EthTrace] base=struct field; nested={[types.EthTrace <> ethtypes.EthTrace] base=exported fields count: 8 != 6; nested=nil}}}}}}}}
	> EthTraceReplayBlockTransactions {[func(context.Context, string, []string) ([]*types.EthTraceReplayBlockTransaction, error) <> func(context.Context, string, []string) ([]*ethtypes.EthTraceReplayBlockTransaction, error)] base=func out type: #0 input; nested={[[]*types.EthTraceReplayBlockTransaction <> []*ethtypes.EthTraceReplayBlockTransaction] base=slice element; nested={[*types.EthTraceReplayBlockTransaction <> *ethtypes.EthTraceReplayBlockTransaction] base=pointed type; nested={[types.EthTraceReplayBlockTransaction <> ethtypes.EthTraceReplayBlockTransaction] base=struct field; nested={[types.EthTraceReplayBlockTransaction <> ethtypes.EthTraceReplayBlockTransaction] base=exported field type: #2 field named Trace; nested={[[]*types.EthTrace <> []*ethtypes.EthTrace] base=slice element; nested={[*types.EthTrace <> *ethtypes.EthTrace] base=pointed type; nested={[types.EthTrace <> ethtypes.EthTrace] base=struct field; nested={[types.EthTrace <> ethtypes.EthTrace] base=exported fields count: 8 != 6; nested=nil}}}}}}}}}
	+ GasBatchEstimateMessageGas
	> GasEstimateMessageGas {[func(context.Context, *types.Message, *types.MessageSendSpec, types.TipSetKey) (*types.Message, error) <> func(context.Context, *types.Message, *api.MessageSendSpec, types.TipSetKey) (*types.Message, error)] base=func in type: #2 input; nested={[*types.MessageSendSpec <> *api.MessageSendSpec] base=pointed type; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=struct field; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=exported field name: #1 field, GasOverEstimation != MsgUuid; nested=nil}}}}
	+ GetActor
	+ GetEntry
	+ GetFullBlock
	+ GetParentStateRootActor
	+ HasPassword
	+ ListActor
	+ LockWallet
	- LogAlerts
	- LogList
	- LogSetLevel
	- MarketAddBalance
	- MarketGetReserved
	- MarketReleaseFunds
	- MarketReserveFunds
	- MarketWithdraw
	> MpoolBatchPushMessage {[func(context.Context, []*types.Message, *types.MessageSendSpec) ([]*types.SignedMessage, error) <> func(context.Context, []*types.Message, *api.MessageSendSpec) ([]*types.SignedMessage, error)] base=func in type: #2 input; nested={[*types.MessageSendSpec <> *api.MessageSendSpec] base=pointed type; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=struct field; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=exported field name: #1 field, GasOverEstimation != MsgUuid; nested=nil}}}}
	+ MpoolDeleteByAdress
	+ MpoolPublishByAddr
	+ MpoolPublishMessage
	> MpoolPushMessage {[func(context.Context, *types.Message, *types.MessageSendSpec) (*types.SignedMessage, error) <> func(context.Context, *types.Message, *api.MessageSendSpec) (*types.SignedMessage, error)] base=func in type: #2 input; nested={[*types.MessageSendSpec <> *api.MessageSendSpec] base=pointed type; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=struct field; nested={[types.MessageSendSpec <> api.MessageSendSpec] base=exported field name: #1 field, GasOverEstimation != MsgUuid; nested=nil}}}}
	+ MpoolSelects
	- MsigAddApprove
	- MsigAddCancel
	- MsigAddPropose
	- MsigApprove
	- MsigApproveTxnHash
	- MsigCancel
	- MsigCancelTxnHash
	- MsigCreate
	- MsigGetAvailableBalance
	- MsigGetPending
	- MsigGetVested
	- MsigGetVestingSchedule
	- MsigPropose
	- MsigRemoveSigner
	- MsigSwapApprove
	- MsigSwapCancel
	- MsigSwapPropose
	- NetBlockAdd
	- NetBlockList
	- NetBlockRemove
	+ NetFindProvidersAsync
	+ NetGetClosestPeers
	- NetLimit
	- NetSetLimit
	- NetStat
	+ ProtocolParameters
	- RaftLeader
	- RaftState
	+ ResolveToKeyAddr
	- Session
	+ SetConcurrent
	+ SetPassword
	- Shutdown
	+ StateMinerSectorSize
	+ StateMinerWorkerAddress
	- SyncCheckBad
	- SyncCheckpoint
	- SyncMarkBad
	- SyncUnmarkAllBad
	- SyncUnmarkBad
	- SyncValidateTipset
	+ SyncerTracker
	+ UnLockWallet
	+ VerifyEntry
	> Version {[func(context.Context) (types.Version, error) <> func(context.Context) (api.APIVersion, error)] base=func out type: #0 input; nested={[types.Version <> api.APIVersion] base=struct field; nested={[types.Version <> api.APIVersion] base=exported fields count: 2 != 3; nested=nil}}}
	+ WalletAddresses
	> WalletExport {[func(context.Context, address.Address, string) (*types.KeyInfo, error) <> func(context.Context, address.Address) (*types.KeyInfo, error)] base=func in num: 3 != 2; nested=nil}
	- WalletList
	- WalletNew
	+ WalletNewAddress
	> WalletSign {[func(context.Context, address.Address, []uint8, types.MsgMeta) (*crypto.Signature, error) <> func(context.Context, address.Address, []uint8) (*crypto.Signature, error)] base=func in num: 4 != 3; nested=nil}
	+ WalletState
	- WalletValidateAddress
	- WalletVerify

